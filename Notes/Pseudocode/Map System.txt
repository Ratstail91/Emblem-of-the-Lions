This game doesn't need the world's most fancy map system, it just needs to *work correctly*.
Don't be afraid of hardcoding for now.

Necessary:
	Load the map data
	Display the map

Expected:
	Save the map data (simple map editor)
	Handle collision data (separate "layer")

Several layers:
	1: base layer
	2: detail layer
	-: Entities
	3: overlay (displayed above entities)
	4: collision (binary)

-------------------------

Region:
	-Uint16 xCount, yCount, zCount
	-Uint16 ***data
	
	LoadData(fname)
	SaveData(fname)
	
	NewData(x, y, z)
	DeleteData()
	
	SetTile(x, y, z, v)
	GetTile(x, y, z)
	
	GetX()
	GetY()
	GetZ()
end

MapUtility:
	-string tname
	-Image tileset
	-Uint16 xCount, yCount //regions
	-Uint16 rWidth, rHeight, rDepth //these MUST match the regions' values
	-Region **data
	
	-CheckValidData() //checks that everything is correctly formatted
	
	LoadMap(fname)
	SaveMap(fname)
	
	NewMap(xCount, yCount, rWidth, rHeight, rDepth)
	DeleteMap()
	
	DrawTo(screen, x, y)
	
	SetTile(x, y, z, v) //relative to the map
	GetTile(x, y, z)
	GetRegion(x, y)
	
	//one tileset for an entire map
	SetTileset(tname)
	GetTileset()
end

-------------------------

Formats:

Region:
	xCount yCount zCount
	[data]
end

Map:
	tname
	tWidth tHeight
	xCount yCount rWidth rHeight rDepth
	[rname]
end

-------------------------

Load tile name
Load tile width & tile height